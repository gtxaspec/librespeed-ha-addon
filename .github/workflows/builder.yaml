name: Builder

env:
  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs"

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed_files
        if: github.event_name == 'pull_request'
        uses: jitterbit/get-changed-files@v1

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          
          # For workflow_dispatch or first push, build all addons
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || [[ -z "${{ steps.changed_files.outputs.all }}" ]]; then
            for addon in ${{ steps.addons.outputs.addons }}; do
              changed_addons+=("${addon}")
            done
          else
            # Check for changes in monitored files
            for addon in ${{ steps.addons.outputs.addons }}; do
              if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon ]]; then
                for file in ${{ env.MONITORED_FILES }}; do
                    if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon/$file ]]; then
                      if [[ ! "${changed_addons[@]}" =~ $addon ]]; then
                        changed_addons+=("${addon}")
                      fi
                    fi
                done
              fi
            done
          fi

          # Build proper JSON array
          if [[ ${#changed_addons[@]} -gt 0 ]]; then
            json_array="["
            for i in "${!changed_addons[@]}"; do
              if [[ $i -eq 0 ]]; then
                json_array="${json_array}\"${changed_addons[$i]}\""
              else
                json_array="${json_array},\"${changed_addons[$i]}\""
              fi
            done
            json_array="${json_array}]"
            
            echo "Changed add-ons: ${json_array}"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "addons=${json_array}" >> $GITHUB_OUTPUT
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})"
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "addons=[]" >> $GITHUB_OUTPUT
          fi

  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT
             # Push images on workflow_dispatch (no --test flag)
             if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                 echo "BUILD_ARGS=" >> $GITHUB_ENV
             else
                 echo "BUILD_ARGS=--test" >> $GITHUB_ENV
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"
             echo "build_arch=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        if: steps.check.outputs.build_arch == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@master
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon